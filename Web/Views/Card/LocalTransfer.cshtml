@model Core.DTOs.Transfer.LocalTransferDTO
@{
    ViewBag.Title = "Local Transfer";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Local Transfer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background-color: #fff8e1; /* Light yellow background */
        }

        .transfer-container {
            max-width: 500px;
            margin: 50px auto;
            padding: 20px;
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .transfer-header {
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            color: #ff9800; /* Orange color for header */
            margin-bottom: 20px;
        }

        .confirm-btn {
            background-color: #ffc107; /* Yellow */
            color: white;
            font-size: 16px;
            padding: 12px;
            border-radius: 5px;
            border: none;
            width: 100%;
        }

            .confirm-btn:hover {
                background-color: #ffb300; /* Darker yellow on hover */
            }

        .form-label {
            font-weight: 600;
            color: #333; /* Dark gray for label */
        }

        .form-control {
            border-radius: 0.375rem;
            border-color: #ffc107;
            box-shadow: none;
        }

            .form-control:focus {
                border-color: #ffc107;
                box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25); /* Yellow focus effect */
            }

        .mb-3 {
            margin-bottom: 1.5rem;
        }

        .validation-summary-errors {
            color: #dc3545; /* Bootstrap red for validation errors */
            font-weight: bold;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="transfer-container">
        <div class="transfer-header">Local Transfer</div>

        @using (Html.BeginForm("LocalTransfer", "Card", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })

            <!-- Source Card Dropdown -->
            <div class="mb-3">
                @Html.LabelFor(m => m.SourceCardId, "Select source card", new { @class = "form-label" })
                @Html.DropDownListFor(m => m.SourceCardId, new SelectList(Model.Cards, "Id", "Name"), "Select a Card", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.SourceCardId, "", new { @class = "text-danger" })
            </div>

            <!-- Target Card Dropdown -->
            <div class="mb-3">
                @Html.LabelFor(m => m.TargetCardId, "Select target card", new { @class = "form-label" })
                @Html.DropDownListFor(m => m.TargetCardId, new SelectList(Model.Cards, "Id", "Name"), "Select a Card", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.TargetCardId, "", new { @class = "text-danger" })
            </div>

            <!-- Amount Input -->
            <div class="mb-3">
                @Html.LabelFor(m => m.Amount, "Enter Amount", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", placeholder = "Enter amount" })
                @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="confirm-btn">Confirm Transfer</button>
        }
    </div>
</body>
</html>
