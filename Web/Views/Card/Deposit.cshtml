@model Core.DTOs.CardActions.DepositTransferDTO

@{
    ViewBag.Title = "Deposit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    .validation-summary-errors {
        color: #dc3545; /* Bootstrap red for validation errors */
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-header {
        background-color: #28a745; /* Success Green */
        color: white;
        text-align: center;
    }

    .card-body {
        background-color: #f8f9fa;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
    }

    .form-control {
        border-radius: 0.375rem;
        box-shadow: none;
    }

        .form-control:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }

    .btn-success {
        width: 100%;
        border-radius: 0.375rem;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .mb-3 {
        margin-bottom: 1.5rem;
    }
</style>

<div class="container mt-5">
    <div class="card shadow-lg mx-auto" style="max-width: 500px;">
        <!-- Limit width to 500px -->
        <div class="card-header">
            <h3 class="mb-0">Deposit</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Deposit", "Card", FormMethod.Post))
            {
                @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })
                @Html.AntiForgeryToken()

                <!-- Card Dropdown -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.CardId, htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.CardId, new SelectList(Model.Cards, "Id", "Name"), "Select Card", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CardId, "", new { @class = "text-danger" })
                </div>

                <!-- Amount Field -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", placeholder = "Enter Amount" })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>

                <!-- Card Number Field -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CardNumber, new { @class = "form-control", placeholder = "Enter Card Number" })
                    @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                </div>

                <!-- Expiration Date Field -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ExpirationDate, new { @class = "form-control", placeholder = "MM/YY" })
                    @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
                </div>

                <!-- CVV Field -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Cvv, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Cvv, new { @class = "form-control", placeholder = "Enter CVV" })
                    @Html.ValidationMessageFor(model => model.Cvv, "", new { @class = "text-danger" })
                </div>

                <!-- Submit Button -->
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success">Deposit</button>
                </div>
            }
        </div>
    </div>
</div>
